name: CI Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: |
            server/package-lock.json
            client/package-lock.json

      - name: Install server dependencies
        run: |
          cd server
          npm ci

      - name: Install client dependencies
        run: |
          cd client
          npm ci

      - name: Run server tests
        run: |
          cd server
          npm test

      - name: Run client tests
        run: |
          cd client
          npm test -- --coverage --watchAll=false

      - name: Build server
        run: |
          cd server
          npm run build

      - name: Build client
        run: |
          cd client
          npm run build

  deploy-server:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        run: |
          cd server
          railway login --browserless
          railway up --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-client:
    if: github.ref == 'refs/heads/main'
    needs: [test, deploy-server]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Deploy to Vercel
        run: |
          cd client
          npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          REACT_APP_WS_URL: ${{ secrets.REACT_APP_WS_URL }}

  ci-success:
    name: CI Success
    runs-on: self-hosted
    needs: [test]
    steps:
      - name: Mark CI as successful
        run: echo "All CI checks passed successfully!"
