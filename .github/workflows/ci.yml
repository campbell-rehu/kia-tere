name: CI Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy to staging'
        required: true
        default: 'main'
        type: string

jobs:
  client:
    name: Client Build & Test
    runs-on: self-hosted

    defaults:
      run:
        working-directory: ./client

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Lint check
        run: npm run lint:check || true # Don't fail on lint errors

      - name: Format check
        run: npm run format:check || true # Don't fail on format errors

      - name: Build client
        run: npm run build

      - name: Run tests
        run: npm test -- --coverage --ci --watchAll=false
        env:
          CI: true

  server:
    name: Server Build & Test
    runs-on: self-hosted

    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint:check || true

      - name: Format check
        run: npm run format:check || true

      - name: Build server
        run: npm run build

      - name: Run tests
        run: npm test -- --ci
        env:
          CI: true

  deploy-staging:
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    needs: [client, server]
    runs-on: self-hosted
    environment: staging

    steps:
      - name: Cleanup workspace
        run: |
          chmod -R 755 $GITHUB_WORKSPACE || true

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}
          clean: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Railway CLI
        run: |
          if ! command -v railway &> /dev/null; then
            npm install -g @railway/cli
          fi

      - name: Deploy to Railway Staging
        run: |
          echo "Deploying combined service to Railway staging..."
          railway up --service ${{ secrets.RAILWAY_STAGING_SERVICE_ID }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  browser-tests:
    if: github.ref == 'refs/heads/main'
    needs: [deploy-staging]
    runs-on: self-hosted
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Wait for staging deployment
        run: |
          echo "Waiting for staging deployment to be ready..."
          sleep 30

      - name: Health check staging
        run: |
          echo "Checking staging health..."
          curl -f ${{ secrets.STAGING_URL }}/health || exit 1

      - name: Placeholder for browser tests
        run: |
          echo "Browser tests would run here against ${{ secrets.STAGING_URL }}"
          echo "TODO: Add Playwright/Cypress tests for WebSocket connectivity"

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: [browser-tests]
    runs-on: self-hosted
    environment: production

    steps:
      - name: Cleanup workspace
        run: |
          chmod -R 755 $GITHUB_WORKSPACE || true

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Railway CLI
        run: |
          if ! command -v railway &> /dev/null; then
            npm install -g @railway/cli
          fi

      - name: Deploy to Railway Production
        run: |
          echo "Deploying combined service to Railway production..."
          railway up --service ${{ secrets.RAILWAY_PRODUCTION_SERVICE_ID }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  cleanup:
    name: Cleanup
    runs-on: self-hosted
    needs: [deploy-production]
    if: always()

    steps:
      - name: Final cleanup
        run: |
          chmod -R 755 $GITHUB_WORKSPACE || true
          rm -rf $GITHUB_WORKSPACE/* || true
          rm -rf $GITHUB_WORKSPACE/.* || true
          echo "Cleanup completed"
